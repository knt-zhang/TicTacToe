{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kent\\\\tictactoe\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // import App from './App';\n\nimport * as serviceWorker from './serviceWorker'; // In JavaScript classes, you need to always call super when defining the constructor of a subclass.\n// All React component classes that have a constructor should start with a super(props) call.\n// function() could be replaced with ()=>, ex. onClick = {()=> {alert('click')}}\n// class Square extends React.Component {\n//   render() {\n//     return (\n//       <button className=\"square\" onClick = {() => this.props.onClick()}>\n//         {this.props.value}\n//       </button>\n//     );\n//   }\n// }\n// replace class Square with function Square\n\nfunction Square(props) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  // keeping track of moves\n  // moved from class Board\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const squares = current.squares.slice(); // if winner is decided or board is filled, stop filling\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    } // switches between X and O\n\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O'; // if not X, then O; vice-versa\n\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  render() {\n    // moved from Board's render\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.jumpTo(move),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }, desc));\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, status), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, moves)));\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Game, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n} // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/kent/tictactoe/src/index.js"],"names":["React","ReactDOM","serviceWorker","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","Game","constructor","state","history","Array","fill","xIsNext","handleClick","current","length","slice","calculateWinner","setState","concat","winner","moves","map","step","move","desc","jumpTo","status","document","getElementById","lines","a","b","c","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// In JavaScript classes, you need to always call super when defining the constructor of a subclass.\n// All React component classes that have a constructor should start with a super(props) call.\n// function() could be replaced with ()=>, ex. onClick = {()=> {alert('click')}}\n// class Square extends React.Component {\n//   render() {\n//     return (\n//       <button className=\"square\" onClick = {() => this.props.onClick()}>\n//         {this.props.value}\n//       </button>\n//     );\n//   }\n// }\n// replace class Square with function Square\nfunction Square(props){\n  return(\n    <button className = \"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  )\n}\n\nclass Board extends React.Component {\n  \n  renderSquare(i) {\n    return (<Square \n      value = {this.props.squares[i]}\n      onClick = {() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  // keeping track of moves\n  // moved from class Board\n  constructor(props){\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      xIsNext: true,\n    };\n  }\n  \n  handleClick(i){\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    // if winner is decided or board is filled, stop filling\n    if (calculateWinner(squares) || squares[i]){\n      return;\n    }\n\n    // switches between X and O\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    // if not X, then O; vice-versa\n    this.setState({\n      history: history.concat([{ squares: squares }]),\n      xIsNext: !this.state.xIsNext\n    });\n  }\n  \n  render() {\n    // moved from Board's render\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) =>{\n      const desc = move ? 'Go to move #' + move: 'Go to game start';\n      return(\n        <li>\n          <button onClick = {() => this.jumpTo(move)}>{ desc }</button>\n        </li>\n      )\n    })\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares = {current.squares}\n            onClick = {(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{ status }</div>\n          <ol>{ moves }</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}